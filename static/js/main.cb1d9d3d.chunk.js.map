{"version":3,"sources":["Forms/FormComponents.module.css","redux/profileReducer.ts","redux/dialogReducer.ts","redux/usersReducer.ts","components/Navbar/Navbar.module.css","api/api.tsx","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Friends/Friends.tsx","components/Header/Header.tsx","redux/authReducer.ts","components/Header/HeaderContainer.tsx","redux/appReducer.ts","redux/redux-store.ts","Login.tsx","App.tsx","index.tsx","Forms/FuncHelper.tsx","components/preloader/preloader.tsx","validators/validators.tsx","Forms/FormComponents.tsx","RedirectHOC.tsx","components/Header/Header.module.css"],"names":["module","exports","initialState","posts","message","like","userProfile","isAuth","status","ADDPOST","SETUSERPROFILE","SETSTATUS","SETPHOTO","setStatus","type","addPostAC","NewTextPost","getUserProfile","userId","dispatch","a","usersAPI","getProfile","response","data","getStatus","profileAPI","updateStatus","resultCode","savePhoto","file","getState","auth","id","newPhoto","photos","saveProfile","profile","newProfile","wrongNetwork","messages","slice","indexOf","toLocaleLowerCase","stopSubmit","contacts","Promise","reject","profileReducer","state","action","newPost","UPDATEMESSAGE","ADDMESSAGE","dialogs","name","NewTextMessage","updateMessageAC","body","addMessageAC","dialogReducer","copyStore","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USER_COUNT","SET_LOAD_ITEM","SET_TOGGLE_FRIENDS","users","pageSize","totalItemsCount","currentPage","loadItem","followingInProgress","follow","unfollow","setUsers","setCurrentPage","setTotalItemsCount","totalCount","setLoadItem","setToggleFriends","usersReducer","updateObjectArray","followed","filter","instance","axios","create","withCredentials","baseURL","headers","getUsers","get","deleteUser","delete","postUser","post","console","warn","put","formData","FormData","append","authAPI","getCaptcha","getAuth","login","email","password","rememberMe","captcha","logout","Navbar","className","c","nav","item","Button","to","activeClassName","activeLink","friends","News","Music","Settings","Friends","Header","props","s","header","alt","src","onClick","SET_USER_DATA","GET_CAPTCHA_URL","setAuthUserData","getAuthUserData","getCaptchaUrl","captchaUrl","url","authReducer","HeaderContainer","this","React","Component","compose","connect","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","dialogPage","usersPage","form","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","minPasswordCreator","length","maxLengthCreator","LoginRedux","reduxForm","handleSubmit","error","onSubmit","createField","Input","required","style","color","border","maxWidth","_error","ProfileContainer","lazy","DialogsContainer","UsersContainer","App","initializeApp","path","render","fallback","lazyComponent","AppContainer","promise","all","SocialNetApp","ReactDOM","document","getElementById","items","itemId","objPropName","newObjProps","map","i","placeholder","component","validators","text","validate","Preloader","display","justifyContent","alignItems","field","maxValue","values","minValue","FormControl","meta","touched","children","hasError","styles","formControl","Textarea","input","restProps","mapStateToProps","withAuthRedirect","RedirectComponent"],"mappings":"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","file":"static/js/main.cb1d9d3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormComponents_formControl__30YBI\",\"error\":\"FormComponents_error__2tbhC\"};","import {ActionTypes, PostType, profilePageType} from \"./store\";\r\nimport {profileAPI, usersAPI} from \"../api/api\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {RootReduxState} from \"./redux-store\";\r\nimport {FormDataType} from \"../components/Profile/ProfileData\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\ntype SetUserProfileAC = {\r\n    type: \"SET-USER-PROFILE\"\r\n    userProfile: UserProfileType | null\r\n}\r\n\r\nexport type UserProfileType = {\r\n    aboutMe: string,\r\n    contacts: ContactsType,\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string,\r\n    userId: string,\r\n    photos: {\r\n        small: string,\r\n        large: string\r\n    }\r\n}\r\nexport type ContactsType = {\r\n    facebook: string,\r\n    website: string,\r\n    vk: string,\r\n    twitter: string,\r\n    instagram: string,\r\n    youtube: string,\r\n    github: string,\r\n    mainLink: string\r\n}\r\n\r\nlet initialState = {\r\n    posts: [{message: \"Hi\", like: 1},\r\n        {message: \"Whats up?\", like: 1},\r\n        {message: \"Learn Pituhon(((\", like: -13},\r\n        {message: \"LOSEEER\", like: 187},\r\n        {message: \"Соси пинчер\", like: 100}],\r\n    // NewTextPost: \"it-camasutra\",\r\n    userProfile: null,\r\n    isAuth: false,\r\n    status: \"\"\r\n\r\n}\r\n\r\nconst ADDPOST = \"ADD-POST\";\r\n// const UPDATEADDPOST = \"UPDATE-ADD-POST\";\r\nconst SETUSERPROFILE = \"SET-USER-PROFILE\"\r\nconst SETSTATUS = \"SET-STATUS\"\r\nconst SETPHOTO = \"SET-PHOTO\"\r\nconst profileReducer = (state: profilePageType = initialState, action: ActionTypes) => {\r\n\r\n    switch (action.type) {\r\n        case ADDPOST: {\r\n            let newPost: PostType = {\r\n                message: action.NewTextPost,\r\n                like: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                // NewTextPost: \"\"\r\n            }\r\n        }\r\n        // case   UPDATEADDPOST: {\r\n        //     return {\r\n        //         ...state,\r\n        //         NewTextPost: action.newText\r\n        //     }\r\n        // }\r\n        case SETUSERPROFILE: {\r\n            return {\r\n                ...state,\r\n                userProfile: action.userProfile\r\n            }\r\n        }\r\n        case SETPHOTO:{\r\n            return{...state,profile:{...state.userProfile,photos:action.photos}}\r\n        }\r\n        case SETSTATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n\r\n        default :\r\n            return state\r\n    }\r\n}\r\nexport const setStatus = (status: string) => {\r\n    return {\r\n        type: SETSTATUS,\r\n        status: status\r\n    } as const\r\n}\r\nexport const setPhoto = (photos:any)=>{\r\n    return{\r\n    type:SETPHOTO,\r\n        photos:photos\r\n    } as const\r\n}\r\nexport const addPostAC = (NewTextPost: string) => {\r\n    return {\r\n        type: ADDPOST,\r\n        NewTextPost\r\n    } as const\r\n}\r\n/*export const updateAddPostAC = (body: string) => {\r\n    return {\r\n        type: UPDATEADDPOST,\r\n        newText: body\r\n    } as const\r\n}*/\r\nexport const setUserProfile = (userProfile: UserProfileType | null): SetUserProfileAC => {\r\n    return {\r\n        type: SETUSERPROFILE,\r\n        userProfile: userProfile\r\n    } as const\r\n}\r\nexport const getUserProfile = (userId: number): ThunkAction<Promise<void>, RootReduxState, unknown, ActionTypes> =>\r\n    async (dispatch) => {\r\n        let response = await usersAPI.getProfile(userId)\r\n        dispatch(setUserProfile(response.data))\r\n    }\r\nexport const getStatus = (userId: number): ThunkAction<Promise<void>, RootReduxState, unknown, ActionTypes> =>\r\n    async (dispatch) => {\r\n        let response = await profileAPI.getStatus(userId)\r\n        dispatch(setStatus(response.data))\r\n    }\r\nexport const updateStatus = (status: string): ThunkAction<Promise<void>, RootReduxState, unknown, ActionTypes> =>\r\n    async (dispatch) => {\r\n        let response = await profileAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0)\r\n            dispatch(setStatus(status))\r\n    }\r\nexport const savePhoto = (file: string): ThunkAction<Promise<void>, RootReduxState, unknown, ActionTypes> =>\r\n    async (dispatch,getState) => {\r\n        const userId = getState().auth.id\r\n        let response = await profileAPI.newPhoto(file)\r\n        if (response.data.resultCode === 0)\r\n            dispatch(setPhoto(response.data.data.photos))\r\n        if (userId)\r\n            dispatch(getUserProfile(userId))\r\n    }\r\nexport const saveProfile = (profile:FormDataType): ThunkAction<Promise<void>, RootReduxState, unknown, ActionTypes> =>\r\n    async (dispatch,getState) => {\r\n        const userId = getState().auth.id\r\n        let response = await profileAPI.newProfile(profile)\r\n        if (response.data.resultCode === 0) {\r\n            if (userId)\r\n                dispatch(getUserProfile(userId))\r\n        }else {\r\n            let wrongNetwork = response.data.messages[0]\r\n                .slice(\r\n                    response.data.messages[0].indexOf(\">\") + 1,\r\n                    response.data.messages[0].indexOf(\")\")\r\n                )\r\n                .toLocaleLowerCase();\r\n            dispatch(\r\n                stopSubmit(\"profile\", {\r\n                    contacts: { [wrongNetwork]: response.data.messages[0] }\r\n                })\r\n            );\r\n            return Promise.reject()\r\n        }\r\n\r\n    }\r\nexport default profileReducer","import {ActionTypes, dialogsPageType} from \"./store\";\r\nconst UPDATEMESSAGE = \"UPDATE-MESSAGE\";\r\nconst ADDMESSAGE = \"ADDMESSAGE\"\r\n\r\nlet initialState =  {dialogs: [\r\n    {name: \"Kirik\", id: 1},\r\n    {name: \"Dimik\", id: 2},\r\n    {name: \"max\", id: 3},\r\n    {name: \"dima\", id: 4},\r\n    {name: \"sasha\", id: 5}\r\n],\r\n    messages: [\r\n        {id:1,message: \"hello\"},\r\n        {id:2,message: \"Как дела придурок?)\"},\r\n        {id:3,message: \"Игноришь?\"}\r\n    ],\r\n    NewTextMessage:\"\"}\r\n\r\nconst dialogReducer = (state:dialogsPageType=initialState,action:ActionTypes) => {\r\nswitch(action.type){\r\n    case UPDATEMESSAGE: {\r\n        let copyStore = {...state, NewTextMessage: action.body}\r\n        copyStore.NewTextMessage = action.body\r\n\r\n        return copyStore\r\n    }\r\n    case ADDMESSAGE: {\r\n        let body = state.NewTextMessage\r\n        return {\r\n            ...state,\r\n            messages: [...state.messages, {id: 6, message: body}],\r\n            NewTextMessage: \"\"\r\n        }\r\n    }\r\n    default:\r\n        return state\r\n    }\r\n\r\n}\r\n\r\nexport const updateMessageAC = (body:string) =>{\r\n    return {\r\n        type: UPDATEMESSAGE,\r\n        body:body\r\n    }as const\r\n}\r\nexport const addMessageAC = () =>{\r\n    return {\r\n        type: ADDMESSAGE,\r\n\r\n    }as const\r\n}\r\nexport default dialogReducer","import {ActionTypes} from \"./store\";\r\nimport {updateObjectArray} from \"../Forms/FuncHelper\";\r\n\r\nexport type UserPageType = {\r\n    id: number\r\n    name: string\r\n    followed: boolean\r\n    photos: PhotosType\r\n}\r\ntype PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\n\r\nexport type InitialStateType = {\r\n\r\n    users: Array<UserPageType>\r\n    pageSize: number\r\n    totalItemsCount: number\r\n    currentPage: number\r\n    loadItem: boolean\r\n    followingInProgress: any[]\r\n}\r\n\r\nconst FOLLOW = \"FOLLOW\"\r\nconst UNFOLLOW = \"UNFOLLOW\"\r\nconst SET_USERS = \"SET_USERS\"\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\r\nconst SET_TOTAL_USER_COUNT = \"SET_TOTAL_USER_COUNT\"\r\nconst SET_LOAD_ITEM = \"SET_LOAD_ITEM\"\r\nconst SET_TOGGLE_FRIENDS = \"SET_TOGGLE_FRIENDS\"\r\nconst initialState: InitialStateType = {\r\n    users: [],\r\n    pageSize: 4,\r\n    totalItemsCount: 0,\r\n    currentPage: 1,\r\n    loadItem: true,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case SET_TOTAL_USER_COUNT:\r\n            return {\r\n                ...state, totalItemsCount: action.totalCount\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        case SET_LOAD_ITEM:\r\n            return {\r\n                ...state, loadItem: action.loadItem\r\n            }\r\n        case SET_TOGGLE_FRIENDS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.loadItem ?\r\n                    [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id === action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    } as const\r\n}\r\nexport const unfollow = (userId: number) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n\r\n    } as const\r\n}\r\nexport const setUsers = (users: Array<UserPageType>) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    } as const\r\n}\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    } as const\r\n}\r\n\r\nexport const setTotalItemsCount = (totalCount: number) => {\r\n    return {\r\n        type: SET_TOTAL_USER_COUNT,\r\n        totalCount\r\n    } as const\r\n}\r\nexport const setLoadItem = (loadItem: boolean) => {\r\n    return {\r\n        type: SET_LOAD_ITEM,\r\n        loadItem\r\n    } as const\r\n}\r\nexport const setToggleFriends = (loadItem: boolean, userId: number) => {\r\n    return {\r\n        type: SET_TOGGLE_FRIENDS,\r\n        loadItem, userId\r\n    } as const\r\n}\r\nexport default usersReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__bGvmN\",\"item\":\"Navbar_item__2Mo-B\",\"activeLink\":\"Navbar_activeLink__TGD0r\",\"friends\":\"Navbar_friends__cMH8L\",\"image\":\"Navbar_image__MofET\"};","import axios from \"axios\";\r\nimport {FormDataType} from \"../components/Profile/ProfileData\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0`,\r\n    headers: {\r\n        \"API-KEY\": \"670e02e0-a18b-4af1-b6d8-7bc8edc695ba\"\r\n\r\n    }\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    async getUsers(currentPage = 2, pageSize = 5) {\r\n        let response = await instance.get(`/users?page=${currentPage}&count=${pageSize}`)\r\n        if (response.data)\r\n            return response.data\r\n    },\r\n    deleteUser(id: number) {\r\n        return instance.delete(`/follow/${id}`)\r\n    },\r\n    postUser(id: number) {\r\n        return instance.post(`/follow/${id}`, {})\r\n    },\r\n    getProfile(id: number) {\r\n        console.warn('Устаревший метод')\r\n        return profileAPI.getProfile(id)\r\n    }\r\n\r\n}\r\nexport const profileAPI = {\r\n    getProfile(id: number) {\r\n        return instance.get(`/profile/` + id)\r\n    },\r\n    getStatus(id: number) {\r\n        return instance.get(`/profile/status/` + id)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`/profile/status`, {status: status})\r\n    },\r\n    newPhoto(file: string) {\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        return instance.put(`/profile/photo`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\nnewProfile(profile: FormDataType) {\r\n        return instance.put(`/profile`,profile)\r\n    }\r\n}\r\nexport const authAPI = {\r\n    getCaptcha(){\r\n        return instance.get(`/security/get-captcha-url`)\r\n    },\r\n    getAuth() {\r\n        return instance.get(`/auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean,captcha:string) {\r\n        return instance.post(`/auth/login`, {email, password, rememberMe,captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete(`/auth/login`)\r\n    }\r\n}","import React from 'react';\r\nimport c from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport { Button } from '@material-ui/core';\r\nconst Navbar = () =>{\r\n    return(\r\n        <nav className={c.nav}>\r\n        <div className={c.item}>\r\n            <Button><NavLink to=\"/profile\" activeClassName={c.activeLink}>Profile</NavLink></Button>\r\n        </div>\r\n        <div className={c.item}>\r\n            <Button><NavLink  to=\"/dialogs\" activeClassName={c.activeLink}>Messages</NavLink></Button>\r\n        </div>\r\n        <div className={c.item} >\r\n            <Button><NavLink to=\"/news\" activeClassName={c.activeLink}>News</NavLink></Button>\r\n        </div>\r\n        <div className={c.item}>\r\n            <Button><NavLink to=\"/music\" activeClassName={c.activeLink}>Music</NavLink></Button>\r\n        </div>\r\n        <div className={c.item}>\r\n     <Button><NavLink to=\"/settings\" activeClassName={c.activeLink}>Settings</NavLink></Button>\r\n        </div>\r\n          \r\n            <div className={c.item}>\r\n                <Button><NavLink to=\"/users?\" activeClassName={c.activeLink} className={c.friends}>Users</NavLink></Button>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default Navbar;","import React from 'react'\r\n\r\nconst News = () =>{\r\n    return(\r\n        <div  >\r\n          News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react'\r\n\r\nconst Music = () =>{\r\n    return(\r\n        <div >\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react'\r\n\r\nconst Settings = () =>{\r\n    return(\r\n        <div  >\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react'\r\nimport c from \"../Navbar/Navbar.module.css\";\r\n\r\n// type friendsDataType = {\r\n//     friend:string\r\n// }\r\n// type friendsPropsType = {\r\n//     friendsData:Array<friendsDataType>\r\n//\r\n// }\r\n\r\n\r\nconst Friends = () =>{\r\n        return (\r\n            <div >\r\n                Friends\r\n                {/*<div>{props.friendsData}</div>*/}\r\n            </div>\r\n        )\r\n\r\n}\r\nexport default  Friends","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Header.module.css';\r\nimport {HeaderContainerType} from \"./HeaderContainer\";\r\n\r\nconst Header = (props: HeaderContainerType) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img alt={'ava'} className={s.header}\r\n                 src='https://static.mk.ru/upload/entities/2018/11/06/articles/detailPicture/88/e3/19/b1/a24bfa5a27d628949cfed7c792c7b99f.jpg'/>\r\n            <div className={s.login}>\r\n                {props.isAuth ? <p>Login:{props.login}\r\n                    <NavLink to={'/dialogs'}><Button  onClick={props.logout}>Logout</Button></NavLink>\r\n                </p> : <Button><NavLink to={'/login'}>Login</NavLink></Button>\r\n                }\r\n            </div>\r\n\r\n        </header>\r\n    )\r\n}\r\nexport default Header;","import {ActionTypes} from \"./store\"\r\nimport {authAPI} from \"../api/api\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {RootReduxState} from \"./redux-store\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\n\r\nexport type InitialStateType = {\r\n    id: number | null;\r\n    email: string | null;\r\n    login: string | null;\r\n    password:string|null,\r\n    isAuth: boolean\r\n    captcha:string|null\r\n}\r\n\r\nconst SET_USER_DATA = \"SET_USER_DATA\"\r\nconst GET_CAPTCHA_URL='GET_CAPTCHA_URL'\r\nconst initialState: InitialStateType = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    password:null,\r\n    isAuth: false,\r\n    captcha:null\r\n}\r\n\r\nconst authReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL:\r\n            return {\r\n                ...state, ...action.data\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const setAuthUserData = (id: number | null,\r\n                                email: string | null,\r\n                                login: string | null, isAuth: boolean) => {\r\n    return {\r\n        type: SET_USER_DATA,\r\n        data: {id, email, login, isAuth}\r\n    } as const\r\n}\r\nexport const getCaptchaUrlSuccess = (captcha:string|null) => {\r\n    return {\r\n        type: GET_CAPTCHA_URL,\r\n        data: {captcha}\r\n    } as const\r\n}\r\n\r\nexport const getAuthUserData = (): ThunkAction<Promise<void>, RootReduxState, unknown, ActionTypes> => async (dispatch) => {\r\n    let response = await authAPI.getAuth()\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data\r\n\r\n        dispatch(setAuthUserData(id, login, email, true))\r\n    }\r\n}\r\nexport const login = (email: string, password: string, rememberMe: boolean,captcha:string): ThunkAction<Promise<void>, RootReduxState, unknown, ActionTypes> =>\r\n    async (dispatch) => {\r\n        let response = await authAPI.login(email, password, rememberMe,captcha)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData())\r\n        } else  {\r\n            if(response.data.resultCode === 10){\r\n                dispatch(getCaptchaUrl())\r\n            }\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"wrong email or password\"\r\n            dispatch(stopSubmit('login', {_error: message}))\r\n        }\r\n    }\r\nexport const logout = (): ThunkAction<Promise<void>, RootReduxState, unknown, ActionTypes> =>\r\n    async (dispatch) => {\r\n        let response = await authAPI.logout()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false))\r\n        }\r\n    }\r\nexport const getCaptchaUrl = (): ThunkAction<Promise<void>, RootReduxState, unknown, ActionTypes> =>\r\n    async (dispatch) => {\r\n        const response = await authAPI.getCaptcha()\r\n        const captchaUrl= response.data.url\r\n         dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n        }\r\nexport default authReducer","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../redux/authReducer\";\r\nimport {RootReduxState} from \"../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    id?: number | null\r\n    email?: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n\r\n    logout: () => void\r\n\r\n}\r\nexport type HeaderContainerType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerType> {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst MapStateToProps = (state: RootReduxState) => ({isAuth: state.auth.isAuth, login: state.auth.login})\r\n\r\nexport default compose(connect<MapStateToPropsType, MapDispatchToPropsType, {}, RootReduxState>(MapStateToProps, {logout}))(HeaderContainer)","import {ActionTypes} from \"./store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {RootReduxState} from \"./redux-store\";\r\nimport {getAuthUserData} from \"./authReducer\";\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\"\r\nconst initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const setInitialSuccess = () => {\r\n    return {\r\n        type: INITIALIZED_SUCCESS,\r\n    } as const\r\n}\r\n\r\nexport const initializeApp = (): ThunkAction<Promise<void>, RootReduxState, unknown, ActionTypes> => {\r\n    return async (dispatch) => {\r\n        const promise = dispatch(getAuthUserData())\r\n        await Promise.all([promise])\r\n        dispatch(setInitialSuccess())\r\n    }\r\n}\r\n\r\nexport default appReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogReducer from \"./dialogReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogPage: dialogReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n\r\n})\r\n\r\nexport type RootReduxState = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\n// @ts-ignore\r\nwindow.__store__ = store\r\n\r\n\r\nexport default store\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport {InjectedFormProps, reduxForm} from 'redux-form'\r\nimport {getCaptchaUrl, login} from \"./redux/authReducer\";\r\nimport {Input} from \"./Forms/FormComponents\";\r\nimport {maxLengthCreator, minPasswordCreator, required} from \"./validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootReduxState} from \"./redux/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {createField} from \"./Forms/FuncHelper\";\r\nexport type FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha:string\r\n}\r\ntype SecurityType = {\r\n    captchaUrl: string|null\r\n}\r\ntype MapStateToProps = {\r\n    captchaUrl: string|null\r\n    isAuth: boolean\r\n\r\n}\r\ntype MapDispatchToProps = {\r\n    login: (email: string, password: string, rememberMe: boolean,captcha:string) => void\r\n}\r\n\r\nconst password = minPasswordCreator(5)\r\nconst length = maxLengthCreator(30)\r\nexport const LoginForm: React.FC<InjectedFormProps<FormDataType,SecurityType>&SecurityType> = ({handleSubmit,error,captchaUrl}) => {\r\n\r\n    return (<form onSubmit={handleSubmit}>\r\n        {createField('email', 'email', Input, [required, length], {}, '')}\r\n        {createField(\"password\", \"Password\", Input, [required, password], {type: \"password\"}, '')}\r\n        {error && <div style={{color: 'red', border: '1px red solid', maxWidth: '200px'}}>\r\n            {error}\r\n        </div>}\r\n        {createField(\"rememberMe\", \"RememberMe\", Input, [], {type: \"checkbox\"}, 'Remember login')}\r\n        {captchaUrl && <img src={captchaUrl}/>}\r\n\r\n        {captchaUrl && createField(\"captcha\", \"captchaUrl\", Input, [required], [], '')}\r\n        <div>\r\n            <button>Login</button>\r\n        </div>\r\n\r\n    </form>)\r\n}\r\ndebugger\r\n\r\nexport const LoginRedux = reduxForm<FormDataType,SecurityType>({form: \"login\"})(LoginForm)\r\n\r\nconst MapStateToProps = (state: RootReduxState) => ({isAuth: state.auth.isAuth,captchaUrl:state.auth.captcha})\r\n const Login: React.FC<MapStateToProps & MapDispatchToProps> = (props) => {\r\n    if (props.isAuth===true) return <Redirect to={'/profile'}/>\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe,formData.captcha)\r\n    }\r\n    return (<div>\r\n        <h1>LOGIN</h1>\r\n        <LoginRedux onSubmit={onSubmit} captchaUrl={props.captchaUrl}    />\r\n    </div>)\r\n}\r\n\r\n\r\nexport default connect(MapStateToProps, {login})(Login)","import React, {lazy, Suspense} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport News from \"./components/News/News\"\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport {BrowserRouter, HashRouter, Redirect, Route} from \"react-router-dom\";\r\nimport Friends from \"./components/Friends/Friends\";\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport {compose} from \"redux\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport store, {RootReduxState} from \"./redux/redux-store\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport Preloader from \"./components/preloader/preloader\";\r\nimport {lazyComponent} from \"./RedirectHOC\";\r\nimport Login from './Login';\r\n\r\nlet ProfileContainer = lazy(()=>import('./components/Profile/ProfileContainer'))\r\nlet DialogsContainer = lazy(()=>import('./components/Dialogs/DialogsContainer'))\r\nlet UsersContainer = lazy(()=>import('./components/Users/UsersContainer'))\r\n\r\ntype MapDispatchToPropsType = {\r\n    initializeApp: () => void\r\n}\r\ntype MapStateToPropsType = {\r\n    initialized: boolean\r\n}\r\ntype AppPropsType = MapDispatchToPropsType & MapStateToPropsType\r\n\r\nclass App extends React.Component<AppPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized)\r\n            return <Preloader/>\r\n        debugger\r\n        return (\r\n            <BrowserRouter>\r\n                <div className=\"app-writer\">\r\n                    <HeaderContainer/>\r\n                    <Navbar/>\r\n                    <div className=\"app-writer-body\">\r\n                        <Redirect to={'/profile'}/>\r\n                        <Route path='/dialogs' render={() => {\r\n                            return(<Suspense fallback={<Preloader/>}>\r\n                                {lazyComponent(DialogsContainer)}\r\n                            </Suspense>)\r\n                        }\r\n                        }/>\r\n                        <Route path='/profile/:userId?' render={() => {\r\n                            return(<Suspense fallback={<Preloader/>}>\r\n                                {lazyComponent(ProfileContainer)}\r\n                            </Suspense>)\r\n                        }}/>\r\n                        <Route path='/users' render={() =>{\r\n                            return(<Suspense fallback={<Preloader/>}>\r\n                                {lazyComponent(UsersContainer)}\r\n                            </Suspense>)\r\n                        } }/>\r\n                        <Route path='/news' render={() => <News/>}/>\r\n                        <Route path='/music' render={() => <Music/>}/>\r\n                        <Route path='/settings' render={() => <Settings/>}/>\r\n                        <Route path='/friends' render={() => <Friends/>}/>\r\n                <Route path='/login' render={() => <Login />}/>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state: RootReduxState) => {\r\n    return {\r\n        initialized: state.app.initialized\r\n    }\r\n}\r\nlet SocialNetApp = () =>\r\n    <HashRouter>\r\n    <Provider store={store}>\r\n        <AppContainer/>\r\n    </Provider>\r\n</HashRouter>\r\nlet AppContainer =  compose<React.ComponentType>(connect<MapStateToPropsType, MapDispatchToPropsType, {}, RootReduxState>(mapStateToProps, {initializeApp}))(App)\r\nexport default SocialNetApp","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SocialNetApp from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n    <SocialNetApp/>, document.getElementById(\"root\")\r\n);\r\n\r\n","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\n\r\nexport const updateObjectArray = (items: Array<any>, itemId: number, objPropName: string, newObjProps: {}) => {\r\n    return items.map(i => {\r\n        if (i[objPropName] === itemId) {\r\n            return {...i, ...newObjProps}\r\n        }\r\n        return i\r\n    })\r\n}\r\nexport const createField = (name: string, placeholder: string,  component: Function, validators: any, props: Object, text: string) => {\r\n    return <div>\r\n        {text}\r\n        <Field name={name} placeholder={placeholder} component={component}  validate={validators}{...props} />\r\n    </div>\r\n}","import React from \"react\";\r\n\r\nlet  Preloader = () =>{\r\n    return<div style={{display:'flex',justifyContent:'center',alignItems:'center'\r\n      }}>\r\n   <img alt=\"preloader\" src={'https://i.stack.imgur.com/kOnzy.gif'} />\r\n        </div>\r\n\r\n}\r\nexport default Preloader","export const required = (field: string): undefined | string => {\r\n    if (field) return undefined\r\n    return 'Field is not filled'\r\n}\r\nexport const maxLengthCreator = (maxValue: number) => (values: string): string | undefined => {\r\n    if (values.length > maxValue) return `Max length ${maxValue} symbol`\r\n    return undefined\r\n}\r\nexport const minPasswordCreator = (minValue: number) => (values: string): string | undefined => {\r\n    if (values.length < minValue) return `Min length password ${minValue} symbol`\r\n    return undefined\r\n}\r\n","import React from 'react'\r\nimport {WrappedFieldProps} from \"redux-form\";\r\nimport styles from './FormComponents.module.css'\r\n\r\nconst FormControl: React.FC<WrappedFieldProps> = (props) => {\r\n    const {meta: {touched, error}, children} = props\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={hasError ? styles.formControl + \" \" + (hasError ? styles.error : \"\") : \"\"}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return (<div>\r\n        <FormControl {...props}><textarea {...input}{...restProps}/></FormControl>\r\n    </div>)\r\n}\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return (<div>\r\n        <FormControl {...props}><input {...input}{...restProps}/></FormControl>\r\n    </div>)\r\n}","import React, {Suspense} from \"react\"\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RootReduxState} from \"./redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport Preloader from \"./components/preloader/preloader\";\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n\r\n}\r\n\r\nlet mapStateToProps = (state: RootReduxState) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport const withAuthRedirect = (Component: any) => {\r\n    class RedirectComponent extends React.Component<any> {\r\n        render() {\r\n            if (this.props.isAuth === false) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect<MapStateToPropsType, any, {}, RootReduxState>(mapStateToProps)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}\r\nexport const lazyComponent = (Component: any) => {\r\n    return(<Suspense fallback={<Preloader/>}>\r\n        <Component />\r\n    </Suspense>)\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__180Wd\",\"login\":\"Header_login__GHgWp\"};"],"sourceRoot":""}