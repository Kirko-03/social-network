{"version":3,"sources":["components/Navbar/Navbar.module.css","redux/dialogReducer.ts","redux/usersReducer.ts","api/api.tsx","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Friends/Friends.tsx","components/Header/Header.tsx","redux/authReducer.ts","components/Header/HeaderContainer.tsx","Login.tsx","redux/appReducer.ts","redux/redux-store.ts","App.tsx","index.tsx","components/preloader/preloader.tsx","Forms/FuncHelper.tsx","validators/validators.tsx","Forms/FormComponents.tsx","RedirectHOC.tsx","components/Header/Header.module.css","Forms/FormComponents.module.css","redux/profileReducer.ts"],"names":["module","exports","UPDATEMESSAGE","ADDMESSAGE","initialState","dialogs","name","id","messages","message","NewTextMessage","updateMessageAC","body","type","addMessageAC","dialogReducer","state","action","copyStore","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USER_COUNT","SET_LOAD_ITEM","SET_TOGGLE_FRIENDS","users","pageSize","totalItemsCount","currentPage","loadItem","followingInProgress","follow","userId","unfollow","setUsers","setCurrentPage","setTotalItemsCount","totalCount","setLoadItem","setToggleFriends","usersReducer","updateObjectArray","followed","filter","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","get","response","data","deleteUser","delete","postUser","post","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","getAuth","login","email","password","rememberMe","logout","Navbar","className","c","nav","item","to","activeClassName","activeLink","friends","image","News","Music","Settings","Friends","Header","props","s","header","src","isAuth","onClick","SET_USER_DATA","setAuthUserData","getAuthUserData","dispatch","a","resultCode","authReducer","HeaderContainer","this","React","Component","compose","connect","auth","minPasswordCreator","length","maxLengthCreator","LoginRedux","reduxForm","form","onSubmit","handleSubmit","createField","Input","required","error","style","color","border","maxWidth","stopSubmit","_error","formData","captcha","INITIALIZED_SUCCESS","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogPage","usersPage","formReducer","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","ProfileContainer","lazy","DialogsContainer","UsersContainer","App","initializeApp","path","render","fallback","lazyComponent","AppContainer","promise","Promise","all","SocialNetApp","ReactDOM","document","getElementById","Preloader","display","justifyContent","alignItems","alt","items","itemId","objPropName","newObjProps","map","i","placeholder","component","validators","text","validate","field","maxValue","values","minValue","FormControl","meta","touched","children","hasError","styles","formControl","Textarea","input","restProps","mapStateToProps","withAuthRedirect","RedirectComponent","posts","like","userProfile","ADDPOST","SETUSERPROFILE","SETSTATUS","setStatus","addPostAC","NewTextPost","getUserProfile","newPost"],"mappings":"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","file":"static/js/main.91768006.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2viZF\",\"item\":\"Navbar_item__12kIc\",\"activeLink\":\"Navbar_activeLink__3JiAX\",\"friends\":\"Navbar_friends__1UnN_\",\"image\":\"Navbar_image__3ngDY\"};","import {ActionTypes, dialogsPageType} from \"./store\";\r\nconst UPDATEMESSAGE = \"UPDATE-MESSAGE\";\r\nconst ADDMESSAGE = \"ADDMESSAGE\"\r\n\r\nlet initialState =  {dialogs: [\r\n    {name: \"Kirik\", id: 1},\r\n    {name: \"Dimik\", id: 2},\r\n    {name: \"max\", id: 3},\r\n    {name: \"dima\", id: 4},\r\n    {name: \"sasha\", id: 5}\r\n],\r\n    messages: [\r\n        {id:1,message: \"hello\"},\r\n        {id:2,message: \"Как дела придурок?)\"},\r\n        {id:3,message: \"Игноришь?\"}\r\n    ],\r\n    NewTextMessage:\"\"}\r\n\r\nconst dialogReducer = (state:dialogsPageType=initialState,action:ActionTypes) => {\r\nswitch(action.type){\r\n    case UPDATEMESSAGE: {\r\n        let copyStore = {...state, NewTextMessage: action.body}\r\n        copyStore.NewTextMessage = action.body\r\n\r\n        return copyStore\r\n    }\r\n    case ADDMESSAGE: {\r\n        let body = state.NewTextMessage\r\n        return {\r\n            ...state,\r\n            messages: [...state.messages, {id: 6, message: body}],\r\n            NewTextMessage: \"\"\r\n        }\r\n    }\r\n    default:\r\n        return state\r\n    }\r\n\r\n}\r\n\r\nexport const updateMessageAC = (body:string) =>{\r\n    return {\r\n        type: UPDATEMESSAGE,\r\n        body:body\r\n    }as const\r\n}\r\nexport const addMessageAC = () =>{\r\n    return {\r\n        type: ADDMESSAGE,\r\n\r\n    }as const\r\n}\r\nexport default dialogReducer","import {ActionTypes} from \"./store\";\r\nimport {updateObjectArray} from \"../Forms/FuncHelper\";\r\n\r\nexport type UserPageType = {\r\n    id: number\r\n    name: string\r\n    followed: boolean\r\n    photos: PhotosType\r\n}\r\ntype PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\n\r\nexport type InitialStateType = {\r\n\r\n    users: Array<UserPageType>\r\n    pageSize: number\r\n    totalItemsCount: number\r\n    currentPage: number\r\n    loadItem: boolean\r\n    followingInProgress: any[]\r\n}\r\n\r\nconst FOLLOW = \"FOLLOW\"\r\nconst UNFOLLOW = \"UNFOLLOW\"\r\nconst SET_USERS = \"SET_USERS\"\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\r\nconst SET_TOTAL_USER_COUNT = \"SET_TOTAL_USER_COUNT\"\r\nconst SET_LOAD_ITEM = \"SET_LOAD_ITEM\"\r\nconst SET_TOGGLE_FRIENDS = \"SET_TOGGLE_FRIENDS\"\r\nconst initialState: InitialStateType = {\r\n    users: [],\r\n    pageSize: 4,\r\n    totalItemsCount: 0,\r\n    currentPage: 1,\r\n    loadItem: true,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        case SET_TOTAL_USER_COUNT:\r\n            return {\r\n                ...state, totalItemsCount: action.totalCount\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        case SET_LOAD_ITEM:\r\n            return {\r\n                ...state, loadItem: action.loadItem\r\n            }\r\n        case SET_TOGGLE_FRIENDS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.loadItem ?\r\n                    [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    } as const\r\n}\r\nexport const unfollow = (userId: number) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n\r\n    } as const\r\n}\r\nexport const setUsers = (users: Array<UserPageType>) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    } as const\r\n}\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    } as const\r\n}\r\n\r\nexport const setTotalItemsCount = (totalCount: number) => {\r\n    return {\r\n        type: SET_TOTAL_USER_COUNT,\r\n        totalCount\r\n    } as const\r\n}\r\nexport const setLoadItem = (loadItem: boolean) => {\r\n    return {\r\n        type: SET_LOAD_ITEM,\r\n        loadItem\r\n    } as const\r\n}\r\nexport const setToggleFriends = (loadItem: boolean, userId: number) => {\r\n    return {\r\n        type: SET_TOGGLE_FRIENDS,\r\n        loadItem, userId\r\n    } as const\r\n}\r\nexport default usersReducer","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0`,\r\n    headers: {\r\n        \"API-KEY\": \"b38adab4-ca13-4452-a976-08addc7350f8\"\r\n\r\n    }\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    async getUsers(currentPage = 2, pageSize = 5) {\r\n        let response = await instance.get(`/users?page=${currentPage}&count=${pageSize}`)\r\n            if (response.data)\r\n                return response.data\r\n    },\r\n    deleteUser(id: number) {\r\n        return instance.delete(`/follow/${id}`)\r\n    },\r\n    postUser(id: number) {\r\n        return instance.post(`/follow/${id}`, {})\r\n    },\r\n    getProfile(id: number) {\r\n        console.warn('Устаревший метод')\r\n        return profileAPI.getProfile(id)\r\n    }\r\n\r\n}\r\nexport const profileAPI = {\r\n    getProfile(id: number) {\r\n        return instance.get(`/profile/` + id)\r\n    },\r\n    getStatus(id: number) {\r\n        return instance.get(`/profile/status/` + id)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`/profile/status`, {status: status})\r\n    }\r\n}\r\nexport const authAPI = {\r\n    getAuth() {\r\n        return instance.get(`/auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean) {\r\n        return instance.post(`/auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`/auth/login`)\r\n    }\r\n}","import React from 'react';\r\nimport c from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nconst Navbar = () =>{\r\n    return(\r\n        <nav className={c.nav}>\r\n        <div className={c.item}>\r\n     <NavLink to=\"/profile\" activeClassName={c.activeLink}>Profile</NavLink>\r\n        </div>\r\n        <div className={c.item}>\r\n     <NavLink  to=\"/dialogs\" activeClassName={c.activeLink}>Messages</NavLink>\r\n        </div>\r\n        <div className={c.item} >\r\n            <NavLink to=\"/news\" activeClassName={c.activeLink}>News</NavLink>\r\n        </div>\r\n        <div className={c.item}>\r\n     <NavLink to=\"/music\" activeClassName={c.activeLink}>Music</NavLink>\r\n        </div>\r\n        <div className={c.item}>\r\n     <NavLink to=\"/settings\" activeClassName={c.activeLink}>Settings</NavLink>\r\n        </div>\r\n            <br></br>\r\n            <br></br>\r\n            <div className={c.item}>\r\n                <NavLink to=\"/users\" activeClassName={c.activeLink} className={c.friends}>Users</NavLink>\r\n            </div>\r\n\r\n            <img className={c.image}></img>\r\n<div>Kirik</div>\r\n            <img className={c.image}></img>\r\n            <div>Dimik</div>\r\n            <img className={c.image}></img>\r\n            <div>Blachek</div>\r\n\r\n\r\n\r\n        </nav>\r\n    )\r\n}\r\nexport default Navbar;","import React from 'react'\r\n\r\nconst News = () =>{\r\n    return(\r\n        <div  >\r\n          News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react'\r\n\r\nconst Music = () =>{\r\n    return(\r\n        <div >\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react'\r\n\r\nconst Settings = () =>{\r\n    return(\r\n        <div  >\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react'\r\nimport c from \"../Navbar/Navbar.module.css\";\r\n\r\n// type friendsDataType = {\r\n//     friend:string\r\n// }\r\n// type friendsPropsType = {\r\n//     friendsData:Array<friendsDataType>\r\n//\r\n// }\r\n\r\n\r\nconst Friends = () =>{\r\n        return (\r\n            <div >\r\n                Friends\r\n                {/*<div>{props.friendsData}</div>*/}\r\n            </div>\r\n        )\r\n\r\n}\r\nexport default  Friends","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Header.module.css';\r\nimport {HeaderContainerType} from \"./HeaderContainer\";\r\n\r\nconst Header = (props: HeaderContainerType) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img className={s.header}\r\n                 src='https://static.mk.ru/upload/entities/2018/11/06/articles/detailPicture/88/e3/19/b1/a24bfa5a27d628949cfed7c792c7b99f.jpg'></img>\r\n            <div className={s.login}>\r\n                {props.isAuth ? <p>Login:{props.login}\r\n                        <button onClick={props.logout}>Logout</button>\r\n                    </p> :\r\n                    <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n            </div>\r\n\r\n        </header>\r\n    )\r\n}\r\nexport default Header;","import {ActionTypes} from \"./store\"\nimport {authAPI} from \"../api/api\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {RootReduxState} from \"./redux-store\";\nimport {stopSubmit} from \"redux-form\";\n\n\nexport type InitialStateType = {\n    id: number | null;\n    email: string | null;\n    login: string | null;\n    isAuth: boolean\n}\n\nconst SET_USER_DATA = \"SET_USER_DATA\"\nconst initialState: InitialStateType = {\n    id: null,\n    email: null,\n    login: null,\n    isAuth: false\n}\n\nconst authReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\n    switch (action.type) {\n\n        case SET_USER_DATA:\n            return {\n                ...state, ...action.data\n            }\n        default:\n            return state\n    }\n\n}\n\n\nexport const setAuthUserData = (id: number | null,\n                                email: string | null,\n                                login: string | null, isAuth: boolean) => {\n    return {\n        type: SET_USER_DATA,\n        data: {id, email, login, isAuth}\n    } as const\n}\n\nexport const getAuthUserData = (): ThunkAction<Promise<void>, RootReduxState, unknown, ActionTypes> => async (dispatch) => {\n    let response = await authAPI.getAuth()\n    if (response.data.resultCode === 0) {\n        let {id, login, email} = response.data.data\n        dispatch(setAuthUserData(id, login, email, true))\n    }\n}\nexport const login = (email: string, password: string, rememberMe: boolean): ThunkAction<Promise<void>, RootReduxState, unknown, ActionTypes> =>\n    async (dispatch) => {\n        let response = await authAPI.login(email, password, rememberMe)\n        if (response.data.resultCode === 0) {\n            dispatch(getAuthUserData())\n        } else {\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : \"wrong email or password\"\n            dispatch(stopSubmit('login', {_error: message}))\n        }\n    }\nexport const logout = (): ThunkAction<Promise<void>, RootReduxState, unknown, ActionTypes> =>\n    async (dispatch) => {\n        let response = await authAPI.logout()\n        if (response.data.resultCode === 0) {\n            dispatch(setAuthUserData(null, null, null, false))\n        }\n    }\n\nexport default authReducer","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {logout} from \"../../redux/authReducer\";\r\nimport {RootReduxState} from \"../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    id?: number | null\r\n    email?: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n\r\n    logout: () => void\r\n\r\n}\r\nexport type HeaderContainerType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerType> {\r\n\r\n\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst MapStateToProps = (state: RootReduxState) => ({isAuth: state.auth.isAuth, login: state.auth.login})\r\n\r\nexport default compose(connect<MapStateToPropsType, MapDispatchToPropsType, {}, RootReduxState>(MapStateToProps, {logout}))(HeaderContainer)","import React from \"react\";\r\nimport {InjectedFormProps, reduxForm} from 'redux-form'\r\nimport {login} from \"./redux/authReducer\";\r\nimport {Input} from \"./Forms/FormComponents\";\r\nimport {maxLengthCreator, minPasswordCreator, required} from \"./validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootReduxState} from \"./redux/redux-store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {createField} from \"./Forms/FuncHelper\";\r\n\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: boolean\r\n}\r\ntype MapStateToProps = {\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToProps = {\r\n    login: (email: string, password: string, rememberMe: boolean, captcha: boolean) => void\r\n}\r\n\r\nconst password = minPasswordCreator(5)\r\nconst length = maxLengthCreator(30)\r\nexport const LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n\r\n    return (<form onSubmit={props.handleSubmit}>\r\n        {createField('email', 'email', Input, [required, length], {}, '')}\r\n        {createField(\"password\", \"Password\", Input, [required, password], {type: \"password\"}, '')}\r\n        {props.error && <div style={{color: 'red', border: '1px red solid', maxWidth: '200px'}}>\r\n            {props.error}\r\n        </div>}\r\n        {createField(\"rememberMe\", \"RememberMe\", Input, [], {type: \"checkbox\"}, 'Remember login')}\r\n\r\n        <div>\r\n            <button>Login</button>\r\n        </div>\r\n\r\n    </form>)\r\n}\r\n\r\nexport const LoginRedux = reduxForm<FormDataType>({form: \"login\"})(LoginForm)\r\n\r\nconst MapStateToProps = (state: RootReduxState) => ({isAuth: state.auth.isAuth, login: state.auth.login})\r\nexport const Login: React.FC<MapStateToProps & MapDispatchToProps> = (props) => {\r\n    if (props.isAuth) return <Redirect to={'/profile'}/>\r\n    const onSubmit = (formData: FormDataType) => {\r\n\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n    return (<div>\r\n        <h1>LOGIN</h1>\r\n        <LoginRedux onSubmit={onSubmit}/>\r\n    </div>)\r\n}\r\n\r\n\r\nexport default connect(MapStateToProps, {login})(Login)","import {ActionTypes} from \"./store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {RootReduxState} from \"./redux-store\";\r\nimport {getAuthUserData} from \"./authReducer\";\r\n\r\nexport type InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED_SUCCESS\"\r\nconst initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const setInitialSuccess = () => {\r\n    return {\r\n        type: INITIALIZED_SUCCESS,\r\n    } as const\r\n}\r\n\r\nexport const initializeApp = (): ThunkAction<Promise<void>, RootReduxState, unknown, ActionTypes> => {\r\n    return async (dispatch) => {\r\n        const promise = dispatch(getAuthUserData())\r\n        await Promise.all([promise])\r\n        dispatch(setInitialSuccess())\r\n    }\r\n}\r\n\r\nexport default appReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogReducer from \"./dialogReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogPage: dialogReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n\r\n})\r\n\r\nexport type RootReduxState = ReturnType<typeof reducers>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\n// @ts-ignore\r\nwindow.__store__ = store\r\n\r\n\r\nexport default store\r\n\r\n\r\n\r\n","import React, {lazy, Suspense} from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport News from \"./components/News/News\"\r\nimport Music from \"./components/Music/Music\";\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport {BrowserRouter, HashRouter, Redirect, Route} from \"react-router-dom\";\r\nimport Friends from \"./components/Friends/Friends\";\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from \"./Login\";\r\nimport {compose} from \"redux\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport store, {RootReduxState} from \"./redux/redux-store\";\r\nimport {initializeApp} from \"./redux/appReducer\";\r\nimport Preloader from \"./components/preloader/preloader\";\r\nimport {lazyComponent} from \"./RedirectHOC\";\r\nlet ProfileContainer = lazy(()=>import('./components/Profile/ProfileContainer'))\r\nlet DialogsContainer = lazy(()=>import('./components/Dialogs/DialogsContainer'))\r\nlet UsersContainer = lazy(()=>import('./components/Users/UsersContainer'))\r\n\r\ntype MapDispatchToPropsType = {\r\n    initializeApp: () => void\r\n}\r\ntype MapStateToPropsType = {\r\n    initialized: boolean\r\n}\r\ntype AppPropsType = MapDispatchToPropsType & MapStateToPropsType\r\n\r\nclass App extends React.Component<AppPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized)\r\n            return <Preloader/>\r\n        debugger\r\n        return (\r\n            <BrowserRouter>\r\n                <div className=\"app-writer\">\r\n                    <HeaderContainer/>\r\n                    <Navbar/>\r\n                    <div className=\"app-writer-body\">\r\n                        <Redirect to={'/profile'}/>\r\n                        <Route path='/dialogs' render={() => {\r\n                            return(<Suspense fallback={<Preloader/>}>\r\n                                {lazyComponent(DialogsContainer)}\r\n                            </Suspense>)\r\n                        }\r\n                        }/>\r\n                        <Route path='/profile/:userId?' render={() => {\r\n                            return(<Suspense fallback={<Preloader/>}>\r\n                                {lazyComponent(ProfileContainer)}\r\n                            </Suspense>)\r\n                        }}/>\r\n                        <Route path='/users' render={() =>{\r\n                            return(<Suspense fallback={<Preloader/>}>\r\n                                {lazyComponent(UsersContainer)}\r\n                            </Suspense>)\r\n                        } }/>\r\n                        <Route path='/news' render={() => <News/>}/>\r\n                        <Route path='/music' render={() => <Music/>}/>\r\n                        <Route path='/settings' render={() => <Settings/>}/>\r\n                        <Route path='/friends' render={() => <Friends/>}/>\r\n                        <Route path='/login' render={() => <Login/>}/>\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: RootReduxState) => {\r\n    return {\r\n        initialized: state.app.initialized\r\n    }\r\n}\r\nlet SocialNetApp = () =>\r\n    <HashRouter>\r\n    <Provider store={store}>\r\n        <AppContainer/>\r\n    </Provider>\r\n</HashRouter>\r\nlet AppContainer =  compose<React.ComponentType>(connect<MapStateToPropsType, MapDispatchToPropsType, {}, RootReduxState>(mapStateToProps, {initializeApp}))(App)\r\nexport default SocialNetApp","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SocialNetApp from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n    <SocialNetApp/>, document.getElementById(\"root\")\r\n);\r\n\r\n","import React from \"react\";\r\n\r\nlet  Preloader = () =>{\r\n    return<div style={{display:'flex',justifyContent:'center',alignItems:'center'\r\n      }}>\r\n   <img alt=\"preloader\" src={'https://i.stack.imgur.com/kOnzy.gif'} />\r\n        </div>\r\n\r\n}\r\nexport default Preloader","import {Field} from \"redux-form\";\r\nimport React from \"react\";\r\n\r\nexport const updateObjectArray = (items: Array<any>, itemId: number, objPropName: string, newObjProps: {}) => {\r\n    return items.map(i => {\r\n        if (i[objPropName] === itemId) {\r\n            return {...i, ...newObjProps}\r\n        }\r\n        return i\r\n    })\r\n}\r\nexport const createField = (name: string, placeholder: string, component: Function, validators: any, props: Object, text: string) => {\r\n    return <div>\r\n        {text}\r\n        <Field name={name} placeholder={placeholder} component={component} validate={validators}{...props}/>\r\n    </div>\r\n}","export const required = (field: string): undefined | string => {\r\n    if (field) return undefined\r\n    return 'Field is not filled'\r\n}\r\nexport const maxLengthCreator = (maxValue: number) => (values: string): string | undefined => {\r\n    if (values.length > maxValue) return `Max length ${maxValue} symbol`\r\n    return undefined\r\n}\r\nexport const minPasswordCreator = (minValue: number) => (values: string): string | undefined => {\r\n    if (values.length < minValue) return `Min length password ${minValue} symbol`\r\n    return undefined\r\n}\r\n","import React from 'react'\r\nimport {WrappedFieldProps} from \"redux-form\";\r\nimport styles from './FormComponents.module.css'\r\n\r\nconst FormControl: React.FC<WrappedFieldProps> = (props) => {\r\n    const {meta: {touched, error}, children} = props\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={hasError ? styles.formControl + \" \" + (hasError ? styles.error : \"\") : \"\"}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return (<div>\r\n        <FormControl {...props}><textarea {...input}{...restProps}/></FormControl>\r\n    </div>)\r\n}\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n    const {input, meta, children, ...restProps} = props\r\n    return (<div>\r\n        <FormControl {...props}><input {...input}{...restProps}/></FormControl>\r\n    </div>)\r\n}","import React, {Suspense} from \"react\"\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RootReduxState} from \"./redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport Preloader from \"./components/preloader/preloader\";\r\n\r\ntype MapStateToPropsType = {\r\n    isAuth: boolean\r\n\r\n}\r\n\r\nlet mapStateToProps = (state: RootReduxState) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nexport const withAuthRedirect = (Component: any) => {\r\n    class RedirectComponent extends React.Component<any> {\r\n        render() {\r\n            if (this.props.isAuth === false) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect<MapStateToPropsType, any, {}, RootReduxState>(mapStateToProps)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}\r\nexport const lazyComponent = (Component: any) => {\r\n    return(<Suspense fallback={<Preloader/>}>\r\n        <Component />\r\n    </Suspense>)\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3X4EN\",\"login\":\"Header_login__2ULOt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormComponents_formControl__2iCwh\",\"error\":\"FormComponents_error__-LYzj\"};","import {ActionTypes, PostType, profilePageType} from \"./store\";\r\nimport {profileAPI, usersAPI} from \"../api/api\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {RootReduxState} from \"./redux-store\";\r\n\r\ntype SetUserProfileAC = {\r\n    type: \"SET-USER-PROFILE\"\r\n    userProfile: UserProfileType | null\r\n}\r\n\r\nexport type UserProfileType = {\r\n    aboutMe: string,\r\n    contacts: ContactsType,\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string,\r\n    userId: string,\r\n    photos: {\r\n        small: string,\r\n        large: string\r\n    }\r\n}\r\nexport type ContactsType = {\r\n    facebook: string,\r\n    website: string,\r\n    vk: string,\r\n    twitter: string,\r\n    instagram: string,\r\n    youtube: string,\r\n    github: string,\r\n    mainLink: string\r\n}\r\n\r\nlet initialState = {\r\n    posts: [{message: \"Hi\", like: 1},\r\n        {message: \"Whats up?\", like: 1},\r\n        {message: \"Learn Pituhon(((\", like: -13},\r\n        {message: \"LOSEEER\", like: 187},\r\n        {message: \"Соси пинчер\", like: 100}],\r\n    // NewTextPost: \"it-camasutra\",\r\n    userProfile: null,\r\n    isAuth: false,\r\n    status: \"\"\r\n\r\n}\r\n\r\nconst ADDPOST = \"ADD-POST\";\r\n// const UPDATEADDPOST = \"UPDATE-ADD-POST\";\r\nconst SETUSERPROFILE = \"SET-USER-PROFILE\"\r\nconst SETSTATUS = \"SET-STATUS\"\r\nconst profileReducer = (state: profilePageType = initialState, action: ActionTypes) => {\r\n\r\n    switch (action.type) {\r\n        case ADDPOST: {\r\n            let newPost: PostType = {\r\n                message: action.NewTextPost,\r\n                like: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                // NewTextPost: \"\"\r\n            }\r\n        }\r\n        // case   UPDATEADDPOST: {\r\n        //     return {\r\n        //         ...state,\r\n        //         NewTextPost: action.newText\r\n        //     }\r\n        // }\r\n        case SETUSERPROFILE: {\r\n            return {\r\n                ...state,\r\n                userProfile: action.userProfile\r\n            }\r\n        }\r\n        case SETSTATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\nexport const setStatus = (status: string) => {\r\n    return {\r\n        type: SETSTATUS,\r\n        status: status\r\n    } as const\r\n}\r\n\r\nexport const addPostAC = (NewTextPost: string) => {\r\n    return {\r\n        type: ADDPOST,\r\n        NewTextPost\r\n    } as const\r\n}\r\n/*export const updateAddPostAC = (body: string) => {\r\n    return {\r\n        type: UPDATEADDPOST,\r\n        newText: body\r\n    } as const\r\n}*/\r\nexport const setUserProfile = (userProfile: UserProfileType | null): SetUserProfileAC => {\r\n    return {\r\n        type: SETUSERPROFILE,\r\n        userProfile: userProfile\r\n    } as const\r\n}\r\nexport const getUserProfile = (userId: number): ThunkAction<Promise<void>, RootReduxState, unknown, ActionTypes> =>\r\n    async (dispatch) => {\r\n        let response = await usersAPI.getProfile(userId)\r\n        dispatch(setUserProfile(response.data))\r\n    }\r\nexport const getStatus = (userId: number): ThunkAction<Promise<void>, RootReduxState, unknown, ActionTypes> =>\r\n    async (dispatch) => {\r\n        let response = await profileAPI.getStatus(userId)\r\n        dispatch(setStatus(response.data))\r\n    }\r\nexport const updateStatus = (status: string): ThunkAction<Promise<void>, RootReduxState, unknown, ActionTypes> =>\r\n    async (dispatch) => {\r\n        let response = await profileAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0)\r\n            dispatch(setStatus(status))\r\n    }\r\nexport default profileReducer"],"sourceRoot":""}